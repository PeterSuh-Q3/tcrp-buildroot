#
# Copyright (C) 2023 TCRP-mshell <https://github.com/PeterSuh-Q3> and Ing <https://github.com/wjz304>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#

name: Buildroot Mshell

on:
  workflow_dispatch:
    inputs:
      version:
        description: "version"
        default: "2023.08.x"
        type: string
jobs:
  buildroot:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          lfs: 'true'

      - name: Install packages
        run: |
          # Clean up disk space
          if [ "$(docker images -q)" ]; then
            docker rmi $(docker images -q)
          fi        
          sudo apt update
          sudo apt -y purge azure-cli* docker* llvm* google* dotnet* powershell* sphinxsearch* mysql* php* 
          sudo apt -y full-upgrade

          sudo apt update
          sudo apt install -y jq gawk cpio gettext libelf-dev qemu-utils 
          sudo snap install yq
          
          df -h

      - name: Bring over tcrpfriend and config files from redpill-load
        run: |
          mkdir /home/runner/work/tcrpfriend
          cd /home/runner/work/tcrpfriend
          git clone https://github.com/PeterSuh-Q3/tcrpfriend.git
          mkdir /opt/config-files
          cd /opt/config-files
          git clone https://github.com/PeterSuh-Q3/redpill-load.git
          ls -ltr /opt/config-files/redpill-load/config 
          
      - name: Build Buildroot
        run: |
          BR_VERSION="${{ inputs.version }}"

          cp -rf /home/runner/work/tcrpfriend/tcrpfriend/buildroot/* .
          cp -rf /opt/config-files/redpill-load/config /home/runner/work/tcrpfriend/tcrpfriend/buildroot/board/tcrpfriend/rootfs-overlay/root/

          git clone --single-branch -b ${BR_VERSION} https://github.com/buildroot/buildroot.git /opt/buildroot
          cd /opt/buildroot

          echo "Generating default Config"
          make BR2_EXTERNAL=./external -j$(nproc) tcrpfriend_defconfig
          
          echo "Download Sources if not cached"
          make BR2_EXTERNAL=./external -j$(nproc) source
          
          echo "Prepare Buildroot for first Make"
          make BR2_EXTERNAL=./external -j$(nproc)

          [ ! -f "output/images/bzImage" ] && exit 1
          [ ! -f "output/images/rootfs.cpio.xz" ] && exit 1
          
          BUILDROOT_VERSION="$(grep ' BR2_VERSION :=' Makefile | cut -d '=' -f2 | tr -d ' ')"
          KERNEL_VERSION="$(grep BR2_LINUX_KERNEL_VERSION .config | cut -d'=' -f2 | tr -d '"')"
          echo "BUILDROOT_VERSION=${BUILDROOT_VERSION}" >> $GITHUB_ENV
          echo "KERNEL_VERSION=${KERNEL_VERSION}" >> $GITHUB_ENV
          
      - name: copy firmware
        run: |      
          mkdir /opt/firmware
          cd /opt/buildroot
          cp -vf /opt/buildroot/output/images/bzImage /opt/firmware/bzImage-friend || exit 1
          cp -vf /opt/buildroot/output/images/rootfs.cpio.xz /opt/firmware/initrd-friend || exit 1

      - name: Upload Artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: buildroot
          path: /opt/firmware
